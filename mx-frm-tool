#!/bin/bash

# This tool is for used to perform the firmware diff file

# Error code definition
E_FAIL_WITH_UPGRADE=1
E_FAIL_WITH_VERIFICATION=2
E_FAIL_WITH_DECRYPT=3
E_FAIL_WITH_MAGIC_CODE_CHECK=4
E_FAIL_WITH_FILE_NOT_FOUND=5

# Check file existence
check_file ()
{
	if [ ! -f $1 ]; then
		echo "File $1 does not exist"
		exit $E_FAIL_WITH_FILE_NOT_FOUND
	fi
}

# Verification
frm_verify ()
{
	check_file "$1"
	local file="$1"
	local output="$2"
	if ! gpg --batch --yes --output "$output" --verify "$file"; then
		exit $E_FAIL_WITH_VERIFICATION
	fi
}

# Decryption
frm_decrypt ()
{
	check_file "$1"
	local file="$1"
	local output="$2"
	if ! gpg --batch --yes --output "$output" --decrypt "$file"; then
		exit $E_FAIL_WITH_DECRYPT
	fi
}

# Magic Code Check
frm_magic_check ()
{
	check_file "$1"
	check_file "$2"
	local magic_file="$1"
	local check_script="$2"
	./${check_script} ${magic_file}
	if [ $? -ne 0 ]; then
		exit $E_FAIL_WITH_MAGIC_CODE_CHECK
	fi
}

# Upgrade
frm_upgrade ()
{
	check_file "$1"
	local upgrade_file="$1"
	./$upgrade_file
	if [ $? -ne 0 ]; then
		exit $E_FAIL_WITH_UPGRADE
	fi
}

# Help function, show the usage
frm_help ()
{
	echo "Use: $1 -v|-d <File> <output_file>"
	echo "Use: $1 -c <check_script> <magic_file>"
	echo "-v : verify the signed file File and output the \
unsigned file output_file"
	echo "-d : decrypt the encrypted file File and output the \
decrypt file output_file"
	echo "-u : upgrade the system with file File"
	echo "-c : verify the magic_file with check_script"
}

CMD="$1"
FILE1="$2"
FILE2="$3"

case "$CMD" in
	"-v")
		# verify
		frm_verify $FILE1 $FILE2
		break;
	;;
	"-d")
		# decrypt
		frm_decrypt $FILE1 $FILE2
		break;
	;;
	"-c")
		# magic check
		frm_magic_check $FILE1 $FILE2
		break;
	;;
	"-u")
		# upgrade
		frm_upgrade $FILE
		break;
	;;
	*)
		echo "Command: $CMD is not supported."
		frm_help "$0"
	;;
esac

